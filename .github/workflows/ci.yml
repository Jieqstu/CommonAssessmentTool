name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-format:
    name: Run Linters & Formatters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install Dependencies (Poetry + requirements.txt)
        run: |
          poetry install --no-interaction --no-root
          pip install -r requirements.txt

      - name: Run Black
        run: poetry run black --check .

      - name: Run Flake8
        run: poetry run flake8 .

      - name: Run MyPy
        run: poetry run mypy src/

      - name: Run Pylint
        run: poetry run pylint src/

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-format
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install Dependencies (Poetry + requirements.txt)
        run: |
          poetry install --no-interaction --no-root
          pip install -r requirements.txt

      - name: Run Tests
        run: poetry run pytest tests/

  docker-check:
    name: Check Docker Syntax & Build Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        run: docker run --rm -i hadolint/hadolint < Dockerfile

      - name: Build Docker Image
        run: docker build -t myapp:latest .

      - name: Run Docker Container
        run: docker run --rm myapp:latest
